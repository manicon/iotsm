<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <client_script><![CDATA[function ($scope, spUtil, $location) {
	/**$scope.$on('data_table.click', function(e, parms){
		var p = $scope.data.page_id || 'form';
		var s = {id: p, table: parms.table, sys_id: parms.sys_id, view: 'sp'};
		$location.search(s);
	});**/
}]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance_table</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>title,table,field_list,filter,order_by,order,order_direction,maximum_entries</field_list>
        <has_preview>false</has_preview>
        <id>data-table-thing-eventreports</id>
        <internal>false</internal>
        <link><![CDATA[form]]></link>
        <name>Data Table IoT Thing EventReports</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function(){
	/*  "use strict"; - linter issues */
	data.thing_sys_id = $sp.getParameter("sys_id");
	data.thing_table = $sp.getParameter("table");
	
	// populate the 'data' object
	var sp_page = $sp.getValue('sp_page');
	var pageGR = new GlideRecord('sp_page');
	pageGR.get(sp_page);
	data.page_id = pageGR.id.getDisplayValue();
	$sp.getValues(data);
	
	var thingCI = new GlideRecord(data.thing_table);
	data.thingCIexists = thingCI.get(data.thing_sys_id); 

	if (data.thingCIexists) {
	
		if (data.field_list) {
			data.fields_array = data.field_list.split(',');	
		} else {
			data.field_list = $sp.getListColumns(data.table);
		}

		if (input) {
			data.p = input.p;
			data.o = input.o;
			data.d = input.d;
			data.q = input.q;
		}
		data.p = data.p || 1;
		data.o = data.o || $sp.getValue('order_by') || 'number';
		data.d = data.d || $sp.getValue('order_direction') || 'DESC';

		data.page_index = (data.p - 1);
		data.window_size = $sp.getValue('maximum_entries') || 10;
		data.window_start  = (data.page_index * data.window_size);
		data.window_end = (((data.page_index + 1) * data.window_size));
		data.filter = $sp.getValue("filter");

		var gr = new GlideRecordSecure(data.table);
		if (!gr.isValid()) {
			data.invalid_table = true;
			data.table_label = data.table;
			return;
		}
		data.table_label = gr.getLabel();
		
		var f = '';
		if(data.filter != '') {
			f = 'affected_ci=' + data.thing_sys_id + '^' + data.filter;
		} else {
			f = 'affected_ci=' + data.thing_sys_id;
		}

		var widgetParams = {
			table: data.table, 
			fields: data.field_list,
			filter: f,
			title: options.title,
			order_by: data.o,
			order_direction: data.d,
			window_size: data.window_size
		};
		
		data.dataTableWidget = $sp.getWidget('widget-data-table', widgetParams);
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin_kbazanov</sys_created_by>
        <sys_created_on>2017-02-20 11:09:52</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>c0c514b11385b640cb273192e144b0fc</sys_id>
        <sys_mod_count>7</sys_mod_count>
        <sys_name>Data Table IoT Thing EventReports</sys_name>
        <sys_package display_value="IoT Service Management" source="x_76760_iot">ae54013edb103200c5df7befbf96191f</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="IoT Service Management">ae54013edb103200c5df7befbf96191f</sys_scope>
        <sys_update_name>sp_widget_c0c514b11385b640cb273192e144b0fc</sys_update_name>
        <sys_updated_by>admin_kbazanov</sys_updated_by>
        <sys_updated_on>2017-02-20 11:39:01</sys_updated_on>
        <template><![CDATA[<div>
  <div class="alert alert-danger" ng-if="data.invalid_table">
    ${Table not defined} '{{data.table_label}}'
  </div>
  <sp-widget ng-if="data.dataTableWidget" widget="data.dataTableWidget"></sp-widget>
</div>]]></template>
    </sp_widget>
</record_update>
