<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_76760_iot_eventreport</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>IoT Create Target Record</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	var grEVNT = new GlideRecord(current.getTableName());
	var request_sys_id = '';
	
	// Todo: look up event code <-> service mapping
	var template = '';
	var grCodeDef = new GlideRecord('x_76760_iot_eventcode_definition');
	grCodeDef.addQuery('eventcode', '=', current.getValue('eventcode'));
	grCodeDef.setLimit(1);
	grCodeDef.query();
	
	if(grCodeDef.next()) {
		template = grCodeDef.getValue('template');
	}
	
	
	// Todo: Loop up active requests to
	var grRequest = new GlideRecord('x_76760_iot_sm_request');
	grRequest.addQuery('template', '=', template);
	grRequest.addQuery('cmdb_ci', '=', current.getValue('affected_ci'));
	grRequest.addQuery('active', '=', true);
	grRequest.setLimit(1);
	grRequest.query();
	
	if(grRequest.next()) {
		// At least request is already active, skip creation
		// Create relation to existent record
		
		request_sys_id = grRequest.getValue('sys_id');
	} else {
	
		// Create new request from template
		grRequest.initialize();

		grRequest.setValue('cmdb_ci', current.getValue('affected_ci'));
		grRequest.setValue('template', template);

		grRequest.insert();
		
		request_sys_id = grRequest.getValue('sys_id');
	}
	
	// write request number back to EventReport
	if(grEVNT.get(current.getValue('sys_id'))) {
		grEVNT.setValue('target_record', request_sys_id);
		grEVNT.update();
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin_kbazanov</sys_created_by>
        <sys_created_on>2017-01-24 10:10:36</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>149485c5136c7a00cb273192e144b0d9</sys_id>
        <sys_mod_count>9</sys_mod_count>
        <sys_name>IoT Create Target Record</sys_name>
        <sys_overrides/>
        <sys_package display_value="IoT Service Management" source="x_76760_iot">ae54013edb103200c5df7befbf96191f</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="IoT Service Management">ae54013edb103200c5df7befbf96191f</sys_scope>
        <sys_update_name>sys_script_149485c5136c7a00cb273192e144b0d9</sys_update_name>
        <sys_updated_by>admin_kbazanov</sys_updated_by>
        <sys_updated_on>2017-01-24 13:37:32</sys_updated_on>
        <template/>
        <when>async</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=149485c5136c7a00cb273192e144b0d9"/>
</record_update>
