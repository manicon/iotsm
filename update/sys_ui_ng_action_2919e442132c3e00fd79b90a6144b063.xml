<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_ui_ng_action">
    <sys_ui_ng_action action="INSERT_OR_UPDATE">
        <action_name>startTravel</action_name>
        <active>true</active>
        <color/>
        <comments/>
        <condition>current.state==17 &amp;&amp; (new global.StateFlow().validFlow(current, 'a864893edb103200c5df7befbf9619bf', 'manual'));</condition>
        <form_button>false</form_button>
        <form_more_item>true</form_more_item>
        <hide_when_disabled>true</hide_when_disabled>
        <hint/>
        <list_button>false</list_button>
        <name>Start Travel</name>
        <navigate_back>false</navigate_back>
        <order>530</order>
        <script><![CDATA[checkUpstreamTravel();
function checkUpstreamTravel() {
    var gajax = new GlideAjax("global.SMTaskDependency");
    gajax.addParam("sysparm_name", "checkUpstreamTasks");
	gajax.addParam("state_flow_id", "a864893edb103200c5df7befbf9619bf");
    gajax.addParam("sysparm_uuid", g_form.getUniqueValue());
    gajax.getXMLAnswer(ajaxResponseTravel);
}

function ajaxResponseTravel(response) {
   if (response == 'true'){
      showDialog();
   } else {
	  // no upstream tasks --> action has been processed by the script include already
      gsftSubmit(null, g_form.getFormElement(), gel('startTravel').value);
   }
}

function showDialog() {
	var dialogClass;
    try {
    	 dialogClass = GlideModal;
    } catch(e) {
    	dialogClass = GlideDialogWindow;
    }
	var dialog = new dialogClass("sm_open_task_upstream_travel"); //Render the dialog containing the UI Page 'task_comments_dialog'
    dialog.setTitle("Are you sure?"); //Set the dialog title
    dialog.setPreference("sys_id", g_form.getUniqueValue());
    dialog.setPreference("short_text", "Open task dependencies still remain, are you sure you would like to start travel?");
	dialog.setPreference('state_flow_id', 'a864893edb103200c5df7befbf9619bf');
    dialog.render(); //Open the dialog
}

if (typeof window == 'undefined')
	serverStartTravel();

function serverStartTravel() {
	new global.StateFlow().processFlow(current, 'a864893edb103200c5df7befbf9619bf', 'manual');
}]]></script>
        <show_for>any</show_for>
        <sys_class_name>sys_ui_ng_action</sys_class_name>
        <sys_created_by>admin_stwilhelm</sys_created_by>
        <sys_created_on>2017-01-27 10:41:27</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>2919e442132c3e00fd79b90a6144b063</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Start Travel</sys_name>
        <sys_overrides/>
        <sys_package display_value="IoT Service Management" source="x_76760_iot">ae54013edb103200c5df7befbf96191f</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="IoT Service Management">ae54013edb103200c5df7befbf96191f</sys_scope>
        <sys_update_name>sys_ui_ng_action_2919e442132c3e00fd79b90a6144b063</sys_update_name>
        <sys_updated_by>admin_stwilhelm</sys_updated_by>
        <sys_updated_on>2017-01-27 10:41:27</sys_updated_on>
        <table>x_76760_iot_sm_task</table>
    </sys_ui_ng_action>
</record_update>
